"""add scheduled/actual_arrival/status/delay_minutes to trains

Revision ID: ad0219fa2dc3
Revises: 
Create Date: 2025-09-12 09:27:09.597255

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ad0219fa2dc3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_disruptions_id'), table_name='disruptions')
    op.drop_table('disruptions')
    op.add_column('trains', sa.Column('scheduled', sa.String(), nullable=True))
    op.add_column('trains', sa.Column('actual_arrival', sa.String(), nullable=True))
    op.add_column('trains', sa.Column('status', sa.String(), nullable=True))
    op.add_column('trains', sa.Column('delay_minutes', sa.Integer(), nullable=False, server_default="0"))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('trains', 'delay_minutes')
    op.drop_column('trains', 'status')
    op.drop_column('trains', 'actual_arrival')
    op.drop_column('trains', 'scheduled')
    op.create_table('disruptions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('train_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('disruption_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['train_id'], ['trains.id'], name=op.f('disruptions_train_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('disruptions_pkey'))
    )
    op.create_index(op.f('ix_disruptions_id'), 'disruptions', ['id'], unique=False)
    # ### end Alembic commands ###
